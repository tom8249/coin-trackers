{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","isLoading","data","type","series","name","x","y","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","xaxis","yaxis","tooltip","enabled","map","price","close","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","formatter","value","toFixed","Title","styled","h1","props","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","loading","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","Price","CoinsList","ul","li","cardBgColor","Img","img","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"8NAAMA,EAAQ,iCAEP,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAezD,SAASC,EAAiBC,GAC/B,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAON,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,mCAC4CM,EAD5C,gBAC6DL,IACvEL,MAAK,SAACC,GAAD,OAAcA,EAASC,U,qBCrBnBS,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,I,OCoKIC,MAtJf,YAAwC,IAAvBX,EAAsB,EAAtBA,OACTY,EAASC,YAAeN,GAC9B,EAA4BO,mBAAwB,CAAC,QAASd,IAAS,kBACrED,EAAiBC,MADXe,EAAR,EAAQA,UAGR,OAHA,EAAmBC,KAIjB,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,cACLC,OAAQ,CACN,CACEC,KAAM,QACNH,KAAM,CACJ,CACEI,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,KAAM,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,UAEjC,CACED,EAAG,IAAIhB,KAAK,WACZiB,EAAG,CAAC,QAAS,KAAM,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,KAAM,KAAM,UAE3B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,UAEjC,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,OAAQ,KAAM,UAE7B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,KAAM,QAAS,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,WACZiB,EAAG,CAAC,KAAM,QAAS,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,OAAQ,OAAQ,QAAS,UAE/B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,UAEjC,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,OAEjC,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,KAAM,QAAS,QAAS,OAE9B,CACED,EAAG,IAAIhB,KAAK,WACZiB,EAAG,CAAC,KAAM,QAAS,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,KAAM,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,KAAM,SAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,KAAM,QAAS,OAAQ,SAE7B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,OAAQ,OAAQ,QAAS,UAE/B,CACED,EAAG,IAAIhB,KAAK,WACZiB,EAAG,CAAC,QAAS,KAAM,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,UAEjC,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,KAAM,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,OAAQ,OAAQ,OAE/B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,OAEjC,CACED,EAAG,IAAIhB,KAAK,UACZiB,EAAG,CAAC,QAAS,QAAS,QAAS,UAEjC,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,QAAS,KAAM,QAAS,UAE9B,CACED,EAAG,IAAIhB,KAAK,YACZiB,EAAG,CAAC,KAAM,QAAS,QAAS,aAKpCC,QAAS,CACPC,MAAO,CACLC,KAAMZ,EAAS,OAAS,SAE1Ba,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,KAAM,CAAEF,MAAM,GACdG,OAAQ,CACNC,MAAO,SACPN,MAAO,GAETO,MAAO,CACLjB,KAAM,YAERkB,MAAO,CACLC,QAAS,CACPC,SAAS,UChFV1B,I,kBAAAA,EA7Df,YAAwC,IAAvBX,EAAsB,EAAtBA,OACf,EAA4Bc,mBAAwB,CAAC,QAASd,IAAS,kBACrED,EAAiBC,MADXe,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAGnB,OACE,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,OACLC,OAAQ,CACN,CACEC,KAAM,QACNH,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMsB,KAAI,SAACC,GAAD,OAAWA,EAAMC,WAGrClB,QAAS,CACPC,MAAO,CACLC,KAAM,QAERC,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,KAAM,CAAEF,MAAM,GACdG,OAAQ,CACNC,MAAO,SACPN,MAAO,GAETQ,MAAO,CACLN,MAAM,GAERK,MAAO,CACLO,WAAY,CAAEZ,MAAM,GACpBa,UAAW,CAAEb,MAAM,GACnBc,OAAQ,CAAEd,MAAM,GAChBZ,KAAM,WACN2B,WAAU,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAMsB,KAAI,SAACC,GAAD,OAAWA,EAAMM,eAEzCC,KAAM,CACJ7B,KAAM,WACN8B,SAAU,CAAEC,iBAAkB,CAAC,WAAYC,MAAO,CAAC,EAAG,OAExDC,OAAQ,CAAC,WACTd,QAAS,CACPf,EAAG,CACD8B,UAAW,SAACC,GAAD,gBAAcA,EAAMC,QAAQ,aCxDjDC,EAAQC,IAAOC,GAAV,+DAEA,SAACC,GAAD,OAAWA,EAAMlC,MAAMmC,eAE5BC,EAASJ,IAAOK,KAAV,sEAINC,EAAYN,IAAOO,IAAV,0FAKTC,EAASR,IAAOS,OAAV,mHAMNC,EAAWV,IAAOO,IAAV,yKAORI,EAAeX,IAAOO,IAAV,iPAaZK,EAAcZ,IAAOa,EAAV,iDAGXC,EAAOd,IAAOO,IAAV,2HAMJQ,EAAMf,IAAOK,KAAV,kQAOE,SAACH,GAAD,OACPA,EAAMc,SAAWd,EAAMlC,MAAMmC,YAAcD,EAAMlC,MAAMiD,aAiJ5CC,I,cAAAA,EA7Ef,YAA+B,IAAD,qBAC5B,IAAQzE,EAAW0E,cAAX1E,OACA2E,EAAUC,cAAVD,MACFE,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBACjC,EAAmDhE,mBACjD,CAAC,OAAQd,IACT,kBJ1IG,SAAuBA,GAC5B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,IAAUJ,MAAK,SAACC,GAAD,OAC/CA,EAASC,UIwIHkF,CAAchF,MAFHiF,EAAnB,EAAQlE,UAA8BmE,EAAtC,EAAgClE,KAIhC,EAAyDF,mBACvD,CAAC,UAAWd,IACZ,kBJxIG,SAA0BA,GAC/B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,oBAAwBO,IAAUJ,MAAK,SAACC,GAAD,OACjDA,EAASC,UIsIHqF,CAAiBnF,KACvB,CACEoF,gBAAiB,MAJFC,EAAnB,EAAQtE,UAAiCuE,EAAzC,EAAmCtE,KAO7BuE,EAAUN,GAAeI,EAC/B,OACE,eAACxB,EAAD,WACE,gCACQ,OAALc,QAAK,IAALA,KAAOxD,KAAOwD,EAAMxD,KAAOoE,EAAU,aAAH,OAAkBL,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU/D,OAEjE,cAAC4C,EAAD,UACE,cAACT,EAAD,UACQ,OAALqB,QAAK,IAALA,KAAOxD,KAAOwD,EAAMxD,KAAOoE,EAAU,aAAH,OAAkBL,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU/D,SAGlEoE,EACC,cAAC5B,EAAD,yBAEA,qCACE,eAACM,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAUM,UAEnB,eAACtB,EAAD,WACE,2CACA,4CAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAUO,aAEpB,eAACvB,EAAD,WACE,0CACA,4CAAQoB,QAAR,IAAQA,GAAR,UAAQA,EAAaI,cAArB,iBAAQ,EAAqBC,WAA7B,iBAAQ,EAA0BpD,aAAlC,aAAQ,EAAiCc,QAAQ,YAGrD,cAACc,EAAD,iBAAce,QAAd,IAAcA,OAAd,EAAcA,EAAUU,cACxB,eAAC3B,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOoB,QAAP,IAAOA,OAAP,EAAOA,EAAaO,kBAEtB,eAAC3B,EAAD,WACE,+CACA,sCAAOoB,QAAP,IAAOA,OAAP,EAAOA,EAAaQ,mBAGxB,eAACzB,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfQ,EAAf,SACE,cAAC,IAAD,CAAMgB,GAAE,WAAM/F,EAAN,UAAR,qBAEF,cAACsE,EAAD,CAAKC,SAAyB,OAAfM,EAAf,SACE,cAAC,IAAD,CAAMkB,GAAE,WAAM/F,EAAN,UAAR,wBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,KAAI,iBAAX,SACE,cAACC,EAAD,CAAOjG,OAAQA,MAEjB,cAAC,IAAD,CAAOgG,KAAI,iBAAX,SACE,cAAC,EAAD,CAAOhG,OAAQA,gBCvMvB6D,EAAYN,IAAOO,IAAV,0FAMTC,EAASR,IAAOS,OAAV,mHAONkC,EAAY3C,IAAO4C,GAAV,0BAET1B,EAAOlB,IAAO6C,GAAV,yTACY,SAAC3C,GAAD,OAAWA,EAAMlC,MAAM8E,eAClC,SAAC5C,GAAD,OAAWA,EAAMlC,MAAMiD,aAYnB,SAACf,GAAD,OAAWA,EAAMlC,MAAMmC,eAKhCJ,EAAQC,IAAOC,GAAV,+DAEA,SAACC,GAAD,OAAWA,EAAMlC,MAAMmC,eAG5BC,GAASJ,IAAOK,KAAV,sEAKN0C,GAAM/C,IAAOgD,IAAV,oFAoDMC,OAlCf,YAAiC,eAC/B,IAAMC,EAAcC,YAAkBnG,GAEtC,EAA4BO,mBAAkB,WAAYpB,GAAlDqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,2BACA,wBAAQ2F,QANS,kBAAMF,GAAY,SAACG,GAAD,OAAWA,MAM9C,4BAED7F,EACC,cAAC,GAAD,yBAEA,cAACmF,EAAD,iBACGlF,QADH,IACGA,OADH,EACGA,EAAM6F,MAAM,EAAG,KAAKvE,KAAI,SAACwE,GAAD,OACvB,cAAC,EAAD,UACE,eAAC,IAAD,CACEf,GAAI,CACFgB,SAAS,IAAD,OAAMD,EAAKE,IACnBrC,MAAO,CAAExD,KAAM2F,EAAK3F,OAHxB,UAME,cAACmF,GAAD,CACEW,IAAG,qDAAgDH,EAAKrB,OAAOyB,iBAEhEJ,EAAK3F,KATR,cADS2F,EAAKE,aChEbG,I,GAAAA,GAdf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOnB,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,Y,SCZGoB,GAA0B,CACrCC,QAAS,UACT7C,UAAW,QACXd,YAAa,UACb2C,YAAa,eAGFiB,GAA2B,CACtCD,QAAS,aACT7C,UAAW,QACXd,YAAa,UACb2C,YAAa,SCLTkB,GAAcC,YAAH,uhDAwDI,SAAC/D,GAAD,OAAWA,EAAMlC,MAAM8F,WAClC,SAAC5D,GAAD,OAAWA,EAAMlC,MAAMiD,aAsBlBiD,OAbf,WACE,IAAM7G,EAASC,YAAeN,GAC9B,OACE,mCACE,eAAC,IAAD,CAAegB,MAAOX,EAASwG,GAAYE,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,UC3ErCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.2990bc4a.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Chart\",\n              data: [\n                {\n                  x: new Date(1538780400000),\n                  y: [6632.01, 6643.59, 6620, 6630.11],\n                },\n                {\n                  x: new Date(1538782200000),\n                  y: [6630.71, 6648.95, 6623.34, 6635.65],\n                },\n                {\n                  x: new Date(1538784000000),\n                  y: [6635.65, 6651, 6629.67, 6638.24],\n                },\n                {\n                  x: new Date(1538785800000),\n                  y: [6638.24, 6640, 6620, 6624.47],\n                },\n                {\n                  x: new Date(1538787600000),\n                  y: [6624.53, 6636.03, 6621.68, 6624.31],\n                },\n                {\n                  x: new Date(1538789400000),\n                  y: [6624.61, 6632.2, 6617, 6626.02],\n                },\n                {\n                  x: new Date(1538791200000),\n                  y: [6627, 6627.62, 6584.22, 6603.02],\n                },\n                {\n                  x: new Date(1538793000000),\n                  y: [6605, 6608.03, 6598.95, 6604.01],\n                },\n                {\n                  x: new Date(1538794800000),\n                  y: [6604.5, 6614.4, 6602.26, 6608.02],\n                },\n                {\n                  x: new Date(1538796600000),\n                  y: [6608.02, 6610.68, 6601.99, 6608.91],\n                },\n                {\n                  x: new Date(1538798400000),\n                  y: [6608.91, 6618.99, 6608.01, 6612],\n                },\n                {\n                  x: new Date(1538800200000),\n                  y: [6612, 6615.13, 6605.09, 6612],\n                },\n                {\n                  x: new Date(1538802000000),\n                  y: [6612, 6624.12, 6608.43, 6622.95],\n                },\n                {\n                  x: new Date(1538803800000),\n                  y: [6623.91, 6623.91, 6615, 6615.67],\n                },\n                {\n                  x: new Date(1538805600000),\n                  y: [6618.69, 6618.74, 6610, 6610.4],\n                },\n                {\n                  x: new Date(1538807400000),\n                  y: [6611, 6622.78, 6610.4, 6614.9],\n                },\n                {\n                  x: new Date(1538809200000),\n                  y: [6614.9, 6626.2, 6613.33, 6623.45],\n                },\n                {\n                  x: new Date(1538811000000),\n                  y: [6623.48, 6627, 6618.38, 6620.35],\n                },\n                {\n                  x: new Date(1538812800000),\n                  y: [6619.43, 6620.35, 6610.05, 6615.53],\n                },\n                {\n                  x: new Date(1538814600000),\n                  y: [6615.53, 6617.93, 6610, 6615.19],\n                },\n                {\n                  x: new Date(1538816400000),\n                  y: [6615.19, 6621.6, 6608.2, 6620],\n                },\n                {\n                  x: new Date(1538818200000),\n                  y: [6619.54, 6625.17, 6614.15, 6620],\n                },\n                {\n                  x: new Date(1538820000000),\n                  y: [6620.33, 6634.15, 6617.24, 6624.61],\n                },\n                {\n                  x: new Date(1538821800000),\n                  y: [6625.95, 6626, 6611.66, 6617.58],\n                },\n                {\n                  x: new Date(1538823600000),\n                  y: [6619, 6625.97, 6595.27, 6598.86],\n                },\n              ],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 3,\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {}\n\nfunction Coin({}: ICoinProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <title>\n        {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n      </title>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {}\n\nfunction Coins({}: ICoinsProps) {\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n        <button onClick={toggleDarkAtom}>Toggle Mode</button>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {}\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}